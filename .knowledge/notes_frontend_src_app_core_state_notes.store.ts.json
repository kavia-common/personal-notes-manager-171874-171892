{"is_source_file": true, "format": "TypeScript", "description": "This file defines the NotesStore class, which manages UI state related to notes, including loading, creating, updating, and deleting notes. It interacts with a backend service via NotesService and maintains application state using Angular signals and computed properties.", "external_files": ["../services/notes.service", "../models/note.model"], "external_methods": ["rxjs.finalize"], "published": ["NotesStore"], "classes": [{"name": "NotesStore", "description": "A service class that manages the notes application's state, including loading, creating, updating, and deleting notes, along with handling loading and error states."}], "methods": [{"name": "constructor", "description": "Initializes NotesStore with dependency injection of NotesService and sets up effect to load notes on first subscription."}, {"name": "setError", "description": "Sets the error message state."}, {"name": "clearError", "description": "Clears any error messages."}, {"name": "loadNotes", "description": "Fetches notes from the backend and updates the store."}, {"name": "selectNote", "description": "Sets the currently selected note by ID."}, {"name": "create", "description": "Creates a new note optimistically and updates the store based on backend response."}, {"name": "update", "description": "Performs an optimistic update on a note and reverts if the backend update fails."}, {"name": "remove", "description": "Deletes a note optimistically and reverts if backend deletion fails."}], "calls": ["this.api.listNotes", "this.api.createNote", "this.api.updateNote", "this.api.deleteNote"], "search-terms": ["NotesStore", "Signal-based state management", "Angular effect", "NotesService interaction", "note creation and update", "optimistic deletion"], "state": 2, "file_id": 26, "knowledge_revision": 55, "git_revision": "", "ctags": [{"_type": "tag", "name": "NotesStore", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^export class NotesStore {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "archived", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const optimistic: Note = { id: tempId, title, content, createdAt: now, updatedAt: now, archi/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "content", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const optimistic: Note = { id: tempId, title, content, createdAt: now, updatedAt: now, archi/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "createdAt", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const optimistic: Note = { id: tempId, title, content, createdAt: now, updatedAt: now, archi/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "id", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const id = this.selectedNoteId();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "notes", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^  readonly notes = signal<Note[]>([]);$/", "language": "TypeScript", "kind": "property", "scope": "NotesStore", "scopeKind": "class"}, {"_type": "tag", "name": "now", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const now = new Date().toISOString();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "optimistic", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const optimistic: Note = { id: tempId, title, content, createdAt: now, updatedAt: now, archi/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "prev", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const prev = this.notes().find(n => n.id === id);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "prev", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const prev = this.notes();$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "tempId", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const tempId = `tmp-${Date.now()}`;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "title", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const optimistic: Note = { id: tempId, title, content, createdAt: now, updatedAt: now, archi/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updated", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const updated: Note = { ...prev, ...patch, updatedAt: new Date().toISOString() };$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const optimistic: Note = { id: tempId, title, content, createdAt: now, updatedAt: now, archi/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "updatedAt", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/core/state/notes.store.ts", "pattern": "/^    const updated: Note = { ...prev, ...patch, updatedAt: new Date().toISOString() };$/", "language": "TypeScript", "kind": "constant"}], "hash": "40e0b7a48242677ca84ff6bd26d7946e", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/core/state/notes.store.ts", "fields": [{"name": "readonly notes = signal<Note[]>([]);", "scope": "NotesStore", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"55": ""}]}