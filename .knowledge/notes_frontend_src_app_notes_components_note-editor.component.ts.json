{"is_source_file": true, "format": "TypeScript", "description": "Angular component for editing notes, including form setup, data binding, and user interaction handling.", "external_files": ["../../shared/ui/button.component", "../../core/models/note.model"], "external_methods": [], "published": ["NoteEditorComponent"], "classes": [{"name": "NoteEditorComponent", "description": "Component providing a form for creating and editing notes, with input for existing note data and output events for save/cancel actions."}], "methods": [{"name": "onSave", "description": "Handles form submission; emits save event with form data if valid, otherwise marks form controls as touched."}], "calls": ["this.form.getRawValue()", "this.form.setValue()", "this.form.reset()", "this.form.markAllAsTouched()"], "search-terms": ["Angular note editor", "ReactiveFormsModule", "FormBuilder", "NoteEditorComponent", "note editing form", "Angular standalone component"], "state": 2, "file_id": 32, "knowledge_revision": 67, "git_revision": "", "ctags": [{"_type": "tag", "name": "NoteEditorComponent", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/notes/components/note-editor.component.ts", "pattern": "/^export class NoteEditorComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "fb", "path": "/home/kavia/workspace/code-generation/personal-notes-manager-171874-171892/notes_frontend/src/app/notes/components/note-editor.component.ts", "pattern": "/^  private fb = new FormBuilder().nonNullable;$/", "language": "TypeScript", "kind": "property", "scope": "NoteEditorComponent", "scopeKind": "class"}], "hash": "f8df0677bad8c507fe4f5b50e426b1c0", "format-version": 4, "code-base-name": "notes_frontend", "filename": "notes_frontend/src/app/notes/components/note-editor.component.ts", "fields": [{"name": "private fb = new FormBuilder().nonNullable;", "scope": "NoteEditorComponent", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"67": ""}]}